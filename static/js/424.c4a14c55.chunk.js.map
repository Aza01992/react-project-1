{"version":3,"file":"static/js/424.c4a14c55.chunk.js","mappings":"6JACA,SAAgB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,sBCI9K,MAQA,EARoBA,IAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAASC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAS,GAAKD,EAAEE,OAAOC,UAClDC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAIV,EAAKO,SAAA,CAAC,IAAER,EAAMY,SACtB,ECFP,EAJiBZ,IACHG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAOE,SAAER,EAAMa,U,sDCG/C,MAAMC,GAAYC,EAAAA,EAAAA,IAAiB,IAgBnC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAhC,EAd+BjB,IAE3BS,EAAAA,EAAAA,MAAA,QAAMS,SAAYlB,EAAMmB,aAAaX,SAAA,EACjCL,EAAAA,EAAAA,KAAA,OAAAK,UACEL,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GACVC,SAAU,CAACC,EAAAA,GAAUV,GAC7BF,KAAK,iBAAiBa,YAAY,0BAErCtB,EAAAA,EAAAA,KAAA,OAAAK,UACCL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,wBCiBhB,EAxBiBR,IACjB,IAAI0B,EAAQ1B,EAAM2B,YACdC,EAAkBF,EAAMG,QAAQC,KAAIC,IAAK5B,EAAAA,EAAAA,KAAC6B,EAAU,CAACpB,KAAQmB,EAAEnB,KAAgBV,GAAI6B,EAAE7B,IAAX6B,EAAE7B,MAC5E+B,EAAmBP,EAAMQ,SAASJ,KAAKK,IAAKhC,EAAAA,EAAAA,KAACiC,EAAO,CAACvB,QAAUsB,EAAEtB,SAAesB,EAAEjC,MAChEwB,EAAMW,eAK5B,OAAKrC,EAAMsC,QAGH7B,EAAAA,EAAAA,MAAA,OAAKL,UAAWC,EAAEwB,QAAQrB,SAAA,EACxBL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEkC,aAAa/B,SAChCoB,KAEDzB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAE6B,SAAS1B,UAC5BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,IAAEyB,EAAiB,YAEvB9B,EAAAA,EAAAA,KAACqC,EAAc,CAACtB,SAbFuB,IACrBzC,EAAM0C,YAAYD,EAAOJ,eAAe,QAEflC,EAAAA,EAAAA,KAACwC,EAAAA,GAAQ,CAAChC,GAAK,UAW1B,E,aC1Bf,MAAMiC,EAA4BlB,IAAK,CACrCY,OAAQZ,EAAMmB,KAAKP,SCmBrB,SAAeQ,E,QAAAA,KACXC,EAAAA,EAAAA,KAlBmBrB,IACZ,CACHC,YAAaD,EAAMC,gBAGDqB,IACf,CACHN,YAAcL,IACVW,GAASC,EAAAA,EAAAA,GAAmBZ,GAAgB,ODRvBa,IAEjC,MAAMC,UAA0BC,EAAAA,UAC5BC,MAAAA,GACE,OAAKC,KAAKtD,MAAMsC,QAEXnC,EAAAA,EAAAA,KAAC+C,EAAS,IAAII,KAAKtD,SAFOG,EAAAA,EAAAA,KAACwC,EAAAA,GAAQ,CAAChC,GAAK,UAGlD,EAIA,OAFmCoC,EAAAA,EAAAA,IAAQH,EAARG,CAAkCI,EAEhC,GCMvC,CAGMI,E","sources":["webpack://my-package/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__aI31k\",\"dialogItems\":\"Dialogs_dialogItems__8zsIS\",\"active\":\"Dialogs_active__pZi79\",\"messages\":\"Dialogs_messages__9re6-\",\"message\":\"Dialogs_message__Br4D+\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return   <div className={s.dialog + '' + s.active}>\r\n  <NavLink to={path}> {props.name}</NavLink>  \r\n </div>\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return    <div className={s.dialog}>{props.message}</div> \r\n   }\r\n\r\nexport default Message; ","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst maxLength = maxLengthCreator(50);\r\n\r\nexport const AddMessageForm = (props) => {\r\n  return(\r\n    <form onSubmit = {props.handleSubmit}>\r\n        <div>\r\n          <Field component={Textarea}\r\n                  validate={[required, maxLength]}\r\n          name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n        </div> \r\n       <div>\r\n        <button>send message</button>\r\n        </div> \r\n    </form>\r\n  )\r\n}\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport AddMessageForm from \"./Message/AddMessageForm\";\r\n/* import { Field } from \"redux-form\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\"\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\"; */\r\n\r\nconst Dialogs = (props) => {\r\nlet state = props.dialogsPage;\r\nlet dialogsElements = state.dialogs.map(d => <DialogItem name = {d.name} key={d.id}id={d.id} /> );\r\nlet messagesElements = state.messages.map (m => <Message message ={m.message} key= {m.id}/>);\r\n let newMessageBody = state.newMessageBody;\r\n\r\n let addNewMessage = (values) => {\r\n props.sendMessage(values.newMessageBody);\r\n }  \r\nif (!props.isAuth) return <Navigate to ={\"/login\"}/>;\r\n \r\n      return (\r\n        <div className={s.dialogs}>\r\n          <div className={s.dialogsItems}>\r\n        {dialogsElements}   \r\n          </div>\r\n        <div className={s.messages}>\r\n       <div> {messagesElements}   </div>  \r\n        </div> \r\n        <AddMessageForm onSubmit={addNewMessage}/>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n  \r\nconst mapStateToPropsForDirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n\r\nclass RedirectComponent extends React.Component {\r\n    render () {\r\n      if (!this.props.isAuth) return <Navigate to ={\"/login\"}/>;\r\n    \r\n    return <Component{...this.props}/>\r\n  }}\r\n\r\nlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForDirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n    ","import React from \"react\";\r\nimport { sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n      \r\n    }\r\n}   \r\n\r\n\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect \r\n    )(Dialogs);"],"names":["props","path","id","_jsx","className","s","dialog","active","children","_jsxs","NavLink","to","name","message","maxLength","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","newMessageBody","isAuth","dialogsItems","AddMessageForm","values","sendMessage","Navigate","mapStateToPropsForDirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","React","render","this","Dialogs"],"sourceRoot":""}